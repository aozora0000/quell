<?php

namespace Tests\Querial;

use Doctrine\SqlFormatter\SqlFormatter;
use Illuminate\Database\ConnectionResolver;
use Illuminate\Database\ConnectionResolverInterface;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\MySqlConnection;
use Illuminate\Database\SQLiteConnection;
use PDO;
use PHPUnit\Framework\TestCase;
use Tests\Querial\MockModel\User;

class WithEloquentModelTestCase extends TestCase
{
    protected ConnectionResolverInterface $connection;

    protected function setUp(): void
    {
        $this->connection = new ConnectionResolver([
            'default' => new MySqlConnection(new PDO('sqlite::memory:')),
        ]);
        $this->connection->setDefaultConnection('default');

        parent::setUp(); // TODO: Change the autogenerated stub
    }

    /**
     * @param  array<string, mixed>  $attributes
     */
    protected function createModel(array $attributes = []): Model
    {
        $model = new User;
        $model->setConnectionResolver($this->connection);

        return $model->fill($attributes);
    }

    protected function format(Builder $builder): string
    {
        return mb_strtolower((new SqlFormatter(new SqlDummyHighlighter))->format($builder->toRawSql()));
    }
}
